// Code generated by Kitex v0.3.4. DO NOT EDIT.

package kanbandatabase

import (
	"context"
	"github.com/MonteCarloClub/KBD/kitex_gen/api"
	"github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
)

func serviceInfo() *kitex.ServiceInfo {
	return kanBanDatabaseServiceInfo
}

var kanBanDatabaseServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "kanBanDatabase"
	handlerType := (*api.KanBanDatabase)(nil)
	methods := map[string]kitex.MethodInfo{
		"GetAccountData": kitex.NewMethodInfo(getAccountDataHandler, newKanBanDatabaseGetAccountDataArgs, newKanBanDatabaseGetAccountDataResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "api",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.3.4",
		Extra:           extra,
	}
	return svcInfo
}

func getAccountDataHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*api.KanBanDatabaseGetAccountDataArgs)
	realResult := result.(*api.KanBanDatabaseGetAccountDataResult)
	success, err := handler.(api.KanBanDatabase).GetAccountData(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newKanBanDatabaseGetAccountDataArgs() interface{} {
	return api.NewKanBanDatabaseGetAccountDataArgs()
}

func newKanBanDatabaseGetAccountDataResult() interface{} {
	return api.NewKanBanDatabaseGetAccountDataResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) GetAccountData(ctx context.Context, req *api.GetAccountDataRequest) (r *api.GetAccountDataResponse, err error) {
	var _args api.KanBanDatabaseGetAccountDataArgs
	_args.Req = req
	var _result api.KanBanDatabaseGetAccountDataResult
	if err = p.c.Call(ctx, "GetAccountData", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
